{"version":3,"sources":["logo.svg","Navbar.js","Textform.js","Alerts.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","onClick","toggleMode","style","height","width","cursor","class","for","Textform","promps","myStyle","color","backgroundColor","useState","text","setText","heading","value","onChange","event","target","id","rows","disabled","length","type","console","log","next","toUpperCase","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","trim","split","join","my-3","filter","element","Alerts","alert","role","msg","App","setAlert","Showalert","message","setMode","cls","body","classList","remove","add","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.3173f26e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","/* eslint-disable jsx-a11y/anchor-is-valid */\r\n/* eslint-disable react/jsx-no-duplicate-props */\r\n// import React,{useState} from 'react'\r\n\r\n\r\nexport default function Navbar(props) {\r\n  \r\n   return (\r\n      <>\r\n      \r\n<nav className={`navbar navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"#\">Textapp</a>\r\n    {/* <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button> */}\r\n\r\n    {/* <div className=\"collapse navbar-collapse\" id=\"navbarNav\">   \r\n      <ul className=\"navbar-nav\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"#\">About</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"#\">Pricing</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link disabled\">Disabled</a>\r\n        </li>\r\n        </ul>\r\n        </div>\r\n         */}\r\n         <div className=\"d-flex\">\r\n         <div className=\"bg-primary rounded mx-2\" onClick={()=>{props.toggleMode('primary')}} style={{height:'30px'\r\n        ,width:'30px', cursor: 'pointer'}}></div>\r\n          <div className=\"bg-danger rounded mx-2\" onClick={()=>{props.toggleMode('danger')}} style={{height:'30px'\r\n        ,width:'30px', cursor: 'pointer'}}></div>\r\n         <div className=\"bg-success mx-2\" onClick={()=>{props.toggleMode('success')}} style={{height:'30px'\r\n        ,width:'30px', cursor: 'pointer'}}></div>\r\n        <div className=\"bg-warning rounded mx-2\" onClick={()=>{props.toggleMode('warning')}} style={{height:'30px'\r\n        ,width:'30px', cursor: 'pointer'}}></div>\r\n</div>\r\n                   <div class=\"form-check form-switch text-{mode}\"  >\r\n  <input  onClick = 'toggle' class=\"form-check-input\" onClick={()=>{props.toggleMode('null')}}  type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n  <label class=\"form-check-label\" for=\"flexSwitchCheckDefault\">Enbale ThemeMode</label>\r\n</div>\r\n{/* <button type=\"button\" className=\"btn btn-primary mx-2\" onClick={togglemode} > Copy text</button> */}\r\n\r\n\r\n</div>\r\n </nav>\r\n  </>\r\n\r\n        \r\n    )\r\n}\r\n//  Name  Mohammed Abrar Ahmed ","import React from 'react'\r\nimport { useState } from 'react'\r\nimport './App.css';\r\n\r\nexport default function Textform(promps) {\r\n\r\n    let myStyle ={\r\n        color: promps.mode ==='dark'?'white':'white',\r\n        backgroundColor: promps.mode ==='dark'?'black':'#042743'\r\n    \r\n      }\r\n    // Change to upperCase\r\n    const handleupclick = ()=>{\r\n        console.log(\"Upper case\" + text);\r\n     let next = text.toUpperCase();\r\n        setText(next);\r\n        \r\n\r\n    }\r\n    // Change to lowercase function\r\n    const handletoclick = ()=>{\r\n        // console.log(\"Upper case\" + text);\r\n     let next = text.toLowerCase();\r\n        setText(next);\r\n        \r\n\r\n    }\r\n    // Clear Function\r\n    const handleclrclick = ()=>{\r\n        // console.log(\"Upper case\" + text);\r\n     let next = ' ';\r\n        setText(next);\r\n        \r\n\r\n    }\r\n// Copy Function\r\n    const handlecopclick = ()=>{\r\n\r\n     let next = document.getElementById('mybox');\r\n     next.select();\r\n    navigator.clipboard.writeText(next.value);\r\n        \r\n\r\n    }\r\n    \r\n    const handlechange = (event)=>{\r\n        setText(event.target.value)\r\n    }\r\n    //for extra space logic\r\n    const handleremoclick =()=>{\r\n        let next = text.trim().split(/ +/).join(' ');\r\n        setText(next);\r\n    }\r\n\r\n    const [text, setText] = useState('');\r\n\r\n    return (\r\n        <div className=\"container\" >\r\n<h1>{promps.heading}</h1>\r\n<div className=\"mb-3\">\r\n<textarea className=\"form-control\" value={text} onChange={handlechange} id=\"mybox\" rows=\"8\"  ></textarea><br />\r\n<button  disabled = {text.length  === 0} type=\"button\" className=\"btn btn-primary mx-2 my-2 \" onClick={handleupclick} style = {myStyle}> Convert to Upper case</button>\r\n<button  disabled = {text.length === 0}    type=\"button\" className=\"btn btn-primary mx-2 my-2 \" onClick={handletoclick}style = {myStyle}> Convert to Lower case</button>\r\n<button  disabled = {text.length === 0}   type=\"button\" className=\"btn btn-primary mx-2 my-2 \" onClick={handleclrclick}style = {myStyle}> Clear text</button>\r\n<button disabled = {text.length === 0}   type=\"button\" className=\"btn btn-primary mx-2 my-2 \" onClick={handlecopclick}style = {myStyle}> Copy text</button>\r\n<button disabled = {text.length === 0}   type=\"button\" className=\"btn btn-primary mx-2 my-2 \"    onClick={handleremoclick}style = {myStyle} > Remove ExtraSpace</button>\r\n</div>\r\n<div className=\"container\" my-3>   \r\n    <h1>Your Summary</h1>\r\n    <p>{text.split(\" \").filter((element)=>{\r\n        return element.length!==0\r\n    }).length}word and {text.length} characters</p>\r\n    <p>{0.008 * text.split(\" \").length} Minutes To read</p>\r\n    <h2>Preview </h2>\r\n    <p>{text}</p>\r\n</div>\r\n        </div>            \r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alerts(props) {\r\n    return (\r\n        \r\n            props.alert && <div className={`alert alert-${props.alert.type}`} role=\"alert\">\r\n                <strong>{props.alert.type}</strong>: {props.alert.msg}\r\n\r\n                \r\n</div>\r\n        \r\n    )\r\n}\r\n","import logo from './logo.svg';\nimport './App.css';\nimport Navbar from './Navbar';\n// import Abouts from './Abouts';\nimport Textform from './Textform';\nimport Alerts from './Alerts';\nimport React,{useState} from 'react'\n\nfunction App() {\nconst [alert, setAlert] = useState(null)\n\nconst Showalert=(message, type)=> {\n    setAlert({\n        msg: message,\n         type : type\n    })\n}\n\nconst [mode, setMode] = useState('light')\n\nconst removecolor =()=>{\n    document.body.classList.remove('bg-light');\n    document.body.classList.remove('bg-primary');\n    document.body.classList.remove('bg-dark');\n    document.body.classList.remove('bg-success');\n    document.body.classList.remove('bg-warning');\n    document.body.classList.remove('bg-danger');\n}\n\n  const toggleMode = (cls) => {\n      removecolor();\n      document.body.classList.add('bg-' +cls)\nif (mode ==='light') {\n    setMode('dark');\n    document.body.style.backgroundColor='#042743';\n    document.body.style.color = 'white';\n    Showalert(\"Dark Mode is Enable\",\"Success\")\n}\nelse{\n    setMode('light');\n    document.body.style.color = 'black';\n    document.body.style.backgroundColor='White';\n    Showalert(\"Light Mode is Enable\",\"Success\")\n}\n    }\nreturn(\n<>\n<Navbar  mode ={mode} toggleMode={toggleMode}  />\n<Alerts alert = {alert} />\n{\n \n<div className=\"container my-3\" >\n<Textform  heading = \" Enter to Convert\"   />\n\n</div> }\n{/* <Abouts/> */}\n</>\n);\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}